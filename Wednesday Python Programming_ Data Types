{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Python Programming: Data Types","provenance":[{"file_id":"1Ngz5-1vRHH7zz8fsEqLo05tPTN1mS1S8","timestamp":1619613333323}],"collapsed_sections":["Fti179OmKM7c","UxdDFPQKz3NS","-BkSbASJUdKQ","a_8-Y8pFUfZ4","zH4fP7JMUqPG","A5_RAp55UkF6","s547kw_RlMAo","lgNykfkVlPAq","-HTYwkHal6e7","KyVOjrcMr4wI","eib75N_EnVqp","1x6Hvs-jrru7"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"g4atfIoY1BjY"},"source":["# Python Programming: Data Types"]},{"cell_type":"markdown","metadata":{"id":"Fti179OmKM7c"},"source":["## 1.1 Introduction"]},{"cell_type":"markdown","metadata":{"id":"_Kl5unZ9KPIY"},"source":["There are many different data types in Python. These data types can also be referred to as types of objects. We can start with the most common object types: strings, integers and floats. Anytime you write words (text) in Python, you're using character strings (strings for short). The most common numbers, on the other hand, are integers (e.g. -1, 0, 100) and floats, which represent real numbers (e.g. 3.14, -42.0)."]},{"cell_type":"markdown","metadata":{"id":"bfLKGj3Xmw1T"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"F8zU7otKNuU3"},"source":["The following are examples of values with different data types;"]},{"cell_type":"code","metadata":{"id":"aLU0ZCM4KKMZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619614614445,"user_tz":-180,"elapsed":1998,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"daac2c4d-2d9f-46ad-f602-ca4689bbd4e7"},"source":["# Example 1\n","# Integer Data Type\n","#\n","55"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["55"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"code","metadata":{"id":"dm_ofqvwPQuP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619614614447,"user_tz":-180,"elapsed":1994,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"d90633bc-b400-4632-9a9c-31488c968633"},"source":["# Example 2\n","# Float Data Type\n","#\n","3.142"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.142"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"Vjla31TDQg4R","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619614614448,"user_tz":-180,"elapsed":1990,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"ef2763de-df48-4105-8547-991f9a8a1081"},"source":["# Example 3\n","# String Data Type\n","#\n","\"Moringa Data Science\" "],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Moringa Data Science'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"uqmC6vfr24_f"},"source":["### <font color=\"green\">1.1 Challenges </font>\n"]},{"cell_type":"code","metadata":{"id":"IpyXzkyYRnJ1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615601125,"user_tz":-180,"elapsed":1658,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"54aab9d6-743f-4aee-8cdf-7a4ddaa0c42a"},"source":["# Challenge 1\n","# Write a value with an Integer data type \n","# \n","66"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["66"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"fTkeiMm6Rrhc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615611569,"user_tz":-180,"elapsed":973,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"e02835ac-bccd-4a7a-e4ff-9f3ef8cd8fde"},"source":["# Challenge 2 \n","# Write any value with a Float Data Type \n","# \n","1.54"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.54"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"-yxfZtWqRuoA","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619615648962,"user_tz":-180,"elapsed":1040,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"229b63ec-0f10-4f2f-f8bc-c5ea465e636d"},"source":["# Challenge 3\n","# Write any value with a String Data Type \n","# \n","\"Im going to be an awesome data scientist\""],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Im going to be an awesome data scientist'"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"UxdDFPQKz3NS"},"source":["## 1.2 Finding Out Types"]},{"cell_type":"markdown","metadata":{"id":"sgBUpOEqRe8d"},"source":["We can get Python to tell us the type of an expression by using the built-in type() function. We'll notice that Python refers to integers as int, floats as float, and character strings as str."]},{"cell_type":"code","metadata":{"id":"GQZq_V9NS09i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615656378,"user_tz":-180,"elapsed":1247,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"2875721f-d9a7-4e40-cc54-3e7283344f3b"},"source":["# Example 1\n","# Finding out the type of 55\n","#\n","type(55)"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"mKoaAXlNS8pt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615656899,"user_tz":-180,"elapsed":1752,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"12e38c89-5ea8-48e1-8aea-e9b0392fa691"},"source":["# Example 2\n","# Finding out the type of 3.142\n","#\n","type(3.142)"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"55FxpuwtS8So","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615656899,"user_tz":-180,"elapsed":1748,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"38250370-927a-4da1-cc86-ad7772068da0"},"source":["# Example 3\n","# Finding out the type of \"Moringa Data Science\"\n","#\n","type(\"Moringa Data Science\")"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"gqLkQCti2_as"},"source":["### <font color=\"green\">1.2 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"9aeJPHk5RJW2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615720347,"user_tz":-180,"elapsed":1670,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"50eb2419-4a1a-47ab-e323-bb5df6995567"},"source":["# Challenge 4 \n","# Now lets find out the type of our value in Challenge #1\n","#\n","type(66)"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"xpxRzyfHT_VC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615733017,"user_tz":-180,"elapsed":1410,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"ce3e852d-df94-49ea-abea-f3e6329fa695"},"source":["# Challenge 5\n","# What about the type of our value in Challenge #2\n","# \n","type(1.54)"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"JSTdIHXdUErB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615774775,"user_tz":-180,"elapsed":941,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"8ed9725f-28b1-4870-e42c-44022a139b0b"},"source":["# Challenge 6\n","# What about the type of our value in Challenge #3\n","#\n","type(\"Im going to be an awesome data scientist\")"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"3A6nP_-XpcTA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615867171,"user_tz":-180,"elapsed":687,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"627d9483-d560-4065-926e-e71d333a6f08"},"source":["# Challenge 7 \n","# What is the data type of the result of: 16 / 4?\n","#\n","print(16/4)\n","type(4)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["4.0\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"_MC1ALIKpnyA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615900960,"user_tz":-180,"elapsed":937,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"3382d8cc-a618-48f3-839d-3f78cc8f84fd"},"source":["# Challenge 8 \n","# What is the type of the result of: 6 // 2? (Note the double slash //.)\n","#\n","print(6//2)\n","type(3)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["3\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"dDF33m3swR-Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615962820,"user_tz":-180,"elapsed":1776,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"f29a0ecb-9303-497b-f254-efc1880892f9"},"source":["# Challenge 9\n","# What do you think is the output of type(a)? Run this cell and check\n","# \n","a = \"Learning Data Science is Easy\" \n","a = 3 \n","print(a)\n","type(a)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["3\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"2GaZ0Eggw7Iu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619615979550,"user_tz":-180,"elapsed":1307,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"fdc4c94f-adce-4b5c-df11-10d0b472b14d"},"source":["# Challenge 10\n","# What do you think is the output of this cell? \n","# Think about it then run it.\n","#\n","type(3.2) == float "],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"-BkSbASJUdKQ"},"source":["## 1.3  Integers"]},{"cell_type":"markdown","metadata":{"id":"JyxHhUBWUrbg"},"source":[" Integers can be negative or positive numbers:"]},{"cell_type":"code","metadata":{"id":"BMEZZkF-Gv4s","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616021811,"user_tz":-180,"elapsed":1795,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"0850fa7a-b2ea-4821-a292-ba872273dc4a"},"source":["# Example 1\n","# Again, we can verify whether this is the case by using the type() function\n","#\n","type(-300)"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"markdown","metadata":{"id":"Z6xx7moLqa2B"},"source":["### <font color = \"green\">1.3 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"dcOMS1Ywn2MG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616073668,"user_tz":-180,"elapsed":1579,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"e1a96f02-8cda-4233-e4c9-afa0c55eb7a1"},"source":["# Challenge 1\n","# What happens when we verify a positive number i.e 43\n","#\n","type(43)"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"H0Ws1Ez1HqoT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616089203,"user_tz":-180,"elapsed":1292,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"49e7e18c-8be1-41f7-97c0-ad902af3fe27"},"source":["# Challenge 2\n","# Let's verify zero below \n","# \n","type(0)"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"a_8-Y8pFUfZ4"},"source":["## 1.4 Floats"]},{"cell_type":"markdown","metadata":{"id":"KK5QqqUFIorK"},"source":["Floats represent real numbers; they also include \"numbers with decimals\". We can now test some examples with the type() function"]},{"cell_type":"code","metadata":{"id":"qLrhOz6eIpZ7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616095112,"user_tz":-180,"elapsed":1661,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"32fa7cfb-1c30-41eb-c3b8-a16ddaf73d23"},"source":["# Example 1\n","# Let's verify 1.0\n","# \n","type(1.0)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"Uc1Dx2gDqlQb"},"source":["###<font color=\"green\"> 1.4 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"AkXuR5UXoa4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616112358,"user_tz":-180,"elapsed":1266,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"e9ab36e1-67fc-4110-e958-9377b876b4fe"},"source":["# Challenge 1 \n","# Let's now verify 0.7\n","#\n","type(0.7)"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"W-dT0-3WWx7z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616126251,"user_tz":-180,"elapsed":1163,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"b538bdb2-3ab9-44ed-ba9d-39e4ec2540e8"},"source":["# Challenge 2\n","# Verifying the type of 0.53\n","# \n","type(0.53)"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"zH4fP7JMUqPG"},"source":["## 1.5 Boolean"]},{"cell_type":"markdown","metadata":{"id":"Bfvyjf_YmT-w"},"source":["Boolean is another important type in Python. An object of type Boolean can take on one of two values: True or False:\n","\n"]},{"cell_type":"code","metadata":{"id":"pLiD-enCmSyO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616132667,"user_tz":-180,"elapsed":1526,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"d2f0479d-6734-400a-f03f-f97b5900f173"},"source":["# Example 1\n","# Let's run this cell and see what happens\n","#\n","True"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"irtYN0ZZmv5Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616133210,"user_tz":-180,"elapsed":2066,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"b55495c3-2872-4d52-f32c-43e0e888f992"},"source":["# Example 2\n","# Let's also run this cell and see what happens\n","#\n","False"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"markdown","metadata":{"id":"u3G52jpj2veu"},"source":["### <font color=\"green\">1.5 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"graRe9NCmioG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616167056,"user_tz":-180,"elapsed":1626,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"d4e2fd6e-a4fe-4b10-d9ff-f5632de435cd"},"source":["# Challenge 1 \n","# What happens when we run 'true' in this cell\n","#\n","True"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"MuyXiaUPmz9U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616175893,"user_tz":-180,"elapsed":1298,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"8ccc9aea-633a-4913-c7a4-69bf5bb188c2"},"source":["# Challenge 2\n","# What about what happens when we run 'false' in this cell\n","#\n","False"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"10qmsXWgm5Hk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616189363,"user_tz":-180,"elapsed":1952,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"d583b2f9-87ca-460e-9161-7934804242be"},"source":["# Challenge 3\n","# Let's also find out type of False in this cell\n","#\n","type(False)"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bool"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"A5_RAp55UkF6"},"source":["## 1.6 Conversion of Types"]},{"cell_type":"markdown","metadata":{"id":"Ajd9s536Ul66"},"source":["We can change the type of the object in Python; this is called typecasting. For example, we can convert an integer into a float (e.g. 2 to 2.0)."]},{"cell_type":"code","metadata":{"id":"yJCPR5BEXp3G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616217763,"user_tz":-180,"elapsed":1162,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"9c441761-0cd6-41d3-8966-7436102166f7"},"source":["# Example 1 \n","# Let's first verify that this is an integer by running this cell. \n","#\n","type(2) "],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"s547kw_RlMAo"},"source":["### 1.6a. Converting integers to floats\n"]},{"cell_type":"code","metadata":{"id":"4mP_uTVYkoKn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616278138,"user_tz":-180,"elapsed":1578,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"6f9f699c-233c-470a-edb8-dac7ba659858"},"source":["# Example 1\n","# Let's now convert integer 2 to a float and check its type\n","#\n","type(float(2)) "],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"YWhO9m4mlAvg"},"source":["When we convert an integer into a float, we don't really change the value (i.e., the significand) of the number. However, if we cast a float into an integer, we could potentially lose some information. For example, if we cast the float 1.1 to integer we will get 1 and lose the decimal information (i.e., 0.1):"]},{"cell_type":"code","metadata":{"id":"ghNEvJErk4Vu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616293893,"user_tz":-180,"elapsed":1021,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"97080288-2fc0-49a0-8faa-4c9312681b43"},"source":["# Example 2\n","# Casting 1.1 to integer will result in loss of information\n","#\n","int(1.1) "],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"markdown","metadata":{"id":"lgNykfkVlPAq"},"source":["### 1.6b. Converting from strings to integers or floats\n"]},{"cell_type":"markdown","metadata":{"id":"rkSTFCOelV-y"},"source":["Sometimes, we can have a string that contains a number within it. If this is the case, we can cast that string that represents a number into an integer using int():\n","\n"]},{"cell_type":"code","metadata":{"id":"qK1OrMJYlSwk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616372183,"user_tz":-180,"elapsed":1388,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"e121cd57-9c74-476c-f44f-3626a58be5c5"},"source":["# Example 1\n","# Let's convert a string into an integer\n","#\n","int('1')"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"9ixyl-vAljSG","colab":{"base_uri":"https://localhost:8080/","height":203},"executionInfo":{"status":"error","timestamp":1619616383110,"user_tz":-180,"elapsed":1270,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"3f70f573-a2ec-4b3b-a547-a47eff26b1d1"},"source":["# Example 2\n","# But if we try to do so with a string that is not a perfect match for a number, we will get an error. \n","# \n","int('1 or 2 people')"],"execution_count":45,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-45-7d12e6129095>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# But if we try to do so with a string that is not a perfect match for a number, we will get an error.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'1 or 2 people'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: '1 or 2 people'"]}]},{"cell_type":"code","metadata":{"id":"1hR-LBq-lvCw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616405396,"user_tz":-180,"elapsed":1165,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"9f82cbc8-26a6-4c3f-ee5d-1343a4a3d7f3"},"source":["# Example 3\n","# We can also convert strings containing floating point numbers into float objects:\n","#\n","float('1.2') "],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.2"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"markdown","metadata":{"id":"-HTYwkHal6e7"},"source":["### 1.6c. Converting numbers to strings\n"]},{"cell_type":"markdown","metadata":{"id":"gLlTlzYml8Fu"},"source":["If we can convert strings to numbers, it is only natural to assume that we can convert numbers to strings, right?\n","\n"]},{"cell_type":"code","metadata":{"id":"XjEcrrz-mByz","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619616420628,"user_tz":-180,"elapsed":1618,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"775e45b1-ba12-44c0-942c-d2ecf8c24439"},"source":["# Example 1\n","# Let's Convert an integer to a string\n","#\n","str(1)"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1'"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"markdown","metadata":{"id":"KyVOjrcMr4wI"},"source":["#### <font color=\"green\">1.6c Challenges</font>"]},{"cell_type":"code","metadata":{"id":"Rk4YzQRGmH87","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619616446835,"user_tz":-180,"elapsed":907,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"2280eeb4-7c27-4937-ab5a-715ce562ad73"},"source":["# Challenge 1\n","# And there is no reason why we shouldn't be able to make floats into strings as well:\n","# Converting a float 1.2 to a string\n","#\n","str(1.2)"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1.2'"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"fnw2YsM8vswc","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619616466364,"user_tz":-180,"elapsed":1105,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"aa8cf4d8-cc53-4239-e719-24ce1ddb3f50"},"source":["# Challenge 2\n","# How do you convert a digit 6/4 into a string?\n","# \n","str(6/4)"],"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1.5'"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"markdown","metadata":{"id":"eib75N_EnVqp"},"source":["### 1.6d. Boolean Casting\n","We can cast boolean objects to other data types. If we cast a boolean with a value of True to an integer or float we will get a one. If we cast a boolean with a value of False to an integer or float we will get a zero. Similarly, if we cast a 1 to a Boolean, you get a True. And if we cast a 0 to a Boolean we will get a False. Let's give it a try:\n","\n"]},{"cell_type":"code","metadata":{"id":"ggrd56z2rd5u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616502635,"user_tz":-180,"elapsed":947,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"29965cc1-10b1-4778-daf2-6f0f3b2d0fa8"},"source":["# Example 1 \n","# Let's cast 1 to a Boolean \n","bool(1)"],"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":50}]},{"cell_type":"markdown","metadata":{"id":"1x6Hvs-jrru7"},"source":["#### <font color=\"green\">1.6d Challenges</font>"]},{"cell_type":"code","metadata":{"id":"JjfxTMb1n_9z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616527048,"user_tz":-180,"elapsed":1116,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"ff2a2307-feea-4222-db35-58c4ebaa427b"},"source":["# Challenge 1\n","# Let's convert the value of True to an integer\n","# \n","int(True)"],"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"id":"1x5bcRVfoNHW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619616539802,"user_tz":-180,"elapsed":867,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"b66409e9-ad11-4eed-f398-130796d868f3"},"source":["# Challenge 2\n","# What happens when we cast a 0 to a Boolean?\n","# \n","bool(0)"],"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"code","metadata":{"id":"VrCxNoqXo03X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619618090316,"user_tz":-180,"elapsed":860,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"75bab803-b7a7-4faf-c1d3-ef69e33a9544"},"source":["# Challenge 3 \n","# Let's cast a boolean with a value of True to an integer\n","int(bool(0)==0)"],"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UA6rmXsRtndd","executionInfo":{"status":"ok","timestamp":1619618110817,"user_tz":-180,"elapsed":844,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"01cf775c-9fb4-4c13-bd39-875189c9c021"},"source":["bool(0)==0"],"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":59}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gazR_3DtxF1s","executionInfo":{"status":"ok","timestamp":1619618292702,"user_tz":-180,"elapsed":986,"user":{"displayName":"Wangari Kimani","photoUrl":"","userId":"05272618557652002049"}},"outputId":"df227fd1-2c13-4c21-d8ec-3374676640ec"},"source":["bool(0)!=1"],"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"EM6Sol2nxd_F"},"source":[""],"execution_count":null,"outputs":[]}]}